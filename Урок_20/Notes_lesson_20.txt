Урок 20. Параметры документа, окна и работа с ним
 Объект document является частью объекта BOM 

BOM - это window 

BOM - это window, который является глобальным объектом браузера, а document является его частью   
Объект document является частью объекта BOM


ОБЪЕКТ screen  

содержит информацию об экране устройства, с которого мы просматриваем страницу

Значения переопределить нельзя   

Так как window является глобальным объектом, то к объекту screen можем обращаться напрямую 
console.dir(window.screen)


ОБЪЕКТ documentElement
объект, который описывает свойства элемента страницы 

в нем содержатся:

clientHeight 
clientWidth
clientTop
clientLeft

параметры области видимой клиентской части 

СВОЙСТВА 

offsetHeight  
offsetWidth
offsetLeft
offsetTop 

покажет то же, что и в коде выше, 
offsetHeight описывает длну всей страницы 


СВОЙСТВА 

scrollHeight  // длина самой прокручиваемой области. Может быть равна 
scrolltWidth ширина самой прокручиваемой области. Может быть равна offsetWidth и clientWidth 
scrollLeft
scrollTop 


ОБРАБОТЧИК СОБЫТИЙ resize
При каждом resize можно проверять значения этих свойств  
Напримр, отработать что-то на широких экранах и при этом не отрабатывать на мобильных
В обработчике событий resize можно реализовать условие 




ОБРАБОТЧИК СОБЫТИЙ scroll 
Свойство ...Top - это разница между  верхом видимой клиентской части и верхом самой страницы
Когда совпадают - равно 0
Указывается просто числом, без пикселей  
Но эти числа сами по себе подразумевают пиксели 
 

На свойства 
clientHeight 
clientWidth
clientTop
clientLeft
 
Мы повлиять не можем 

А на свойства 
scrollLeft
scrollTop 
повлиять можем

Пример: 
const btn = document.getElementById('btn');

const height = document.documentElement.clientHeight
const width = document.documentElement.clientWidth

console.log('clientHeight', height)
console.log('clientWidth', width)

window.addEventListener('scroll', () => {
  const top = document.documentElement.scrollTop
  const left = document.documentElement.scrollLeft

console.log('top', top)
console.log('left', left)
})

btn.addEventListener('click', () => {
  document.documentElement.scrollTop = 100 // прокручиваемся на 100 пикселей вниз  
})

РАБОТА С ЭЛЕМЕНТАМИ НА СТРАНИЦЕ
const btn = document.getElementById('btn');
const block = document.getElementById('block');

console.log(block)

Те значения, которые эти методом выводятся в консоль, отличаются от заданнвх автором
Это из-за скролбара - он имеет свою ширину и паддингов 

Чтобы этого избежать - пишем box-sizing: border-box в css 

box-sizing: border-box приказывает браузеру сжимать все содеожимое контента, чтобы блок не увеличил свои характеристики   

Если хотим узнать ширину и высоту с учетом полосы прогрузки и бордера - то используем offsetHeight и offsetWidth 

!!! свойства scrollHeight не учитывают полосу прокрутки
scrolltWidth 
scrollLeft
scrollTop 
 


МЕТОД scrollBy ()
Принимает 2 обязательных аргумента 
1) - количество пикселей горизонтальной прокрутки 
2) - количество пикселей вертикальной прокрутки 

Работает не одноразово - т е если повесить это событие на клик, то отработоеат столько раз, сколько будет кликов 
Можно в параметры передавать только 1 значение - и элемент будет реагировать только по второму параметру - например, скроллить вниз 


МЕТОД scrollTo ()
Производит перевод только 1 раз - единажды 


 !!в JS все координаты отсчитываются от левого верхнего блока, либо экрана 

МЕТОД, КОТОРЫЙ ПОКАЗЫВАЕТ КООРДИНАТЫ ЭЛЕМЕНТА ОТНОСИТЕЛЬНО ТЕКУЩЕЙ СТРАНИЦЫ 
getBoundingClientRect()
 










